name: Deploy to AWS

on:
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      #Step 1: Download the build artifact
      - name: List Artifacts (For Debugging)
        run: |
          echo "Listing available artifacts:"
          gh run view --log --json artifacts

      - name: Download the build artifact
        uses: actions/download-artifact@v4
        with:
          path: customer-api/

      #Step 2: Setup SSH key for AWS EC2 access
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.AWS_EC2_HOST }} >> ~/.ssh/known_hosts

      # - name: List directory
      #   id: locate-artifact
      #   run: find / -name '*.jar'
      
      #Step 3: Copy JAR file to EC2 instance
      - name: Copy artifact to EC2
        run: |
          scp -i ~/.ssh/id_rsa customer-api-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.AWS_EC2_HOST}}:/home/ubuntu/app/customer-api-0.0.1-SNAPSHOT.jar

      #Step 4: Restart the spring-boot app on EC2 instance
      - name: Restart spring boot app
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@{{ secrets.AWS_EC2_HOST }} << 'EOF'
          cd /home/ubuntu/app
          sudo systemctl stop customer-api.service
          sudo systemctl start customer-api.service
